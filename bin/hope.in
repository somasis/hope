#!/bin/sh

hope="${0##*/}"
export test_success=0
export test_failed=0
export test_num=0

if [ -t 1 ] && ! [ -n "${NO_COLOR}" ];then
    color_bold=$(tput bold)
    color_red=$(tput setaf 1)
    color_green=$(tput setaf 2)
    color_reset=$(tput sgr0)
fi

expect_out() {
    description="${1}"; shift
    export test_num=$(( test_num + 1 ))
    expecting="${1}"; shift
    output=$(eval "${@}" 2>&1)
    if [ "${output}" = "${expecting}" ];then
        export test_success=$(( test_success + 1 ))
        printf "${color_green}ok %s %s${color_reset}\n" "${test_num}" "$*"
    else
        export test_failed=$(( test_failed + 1 ))
        printf "${color_red}not ok %s %s${color_reset}\n" "${test_num}" "$*"
        printf '    %s\n' "Expected:"
        printf '%s\n' "${expected}" | while read line;do
            printf '    %s\n' "${line}"
        done
        printf '# %s\n' "Output:"
        printf '%s\n' "${output}" | while read line;do
            printf '    %s\n' "${line}"
        done
    fi
    description=
}

expect_exit() {
    description="${1}"; shift
    export test_num=$(( test_num + 1 ))
    expecting="${1}"; shift
    err=0
    "${@}" || err=$?
    if [ "${err}" -eq "${expecting}" ];then
        test_success=$(( test_success + 1 ))
        hope_test_output success
    else
        test_failed=$(( test_failed + 1 ))
        hope_test_output failed
        printf '# %s\n' "$*"
    fi
    description=
    err=
}

hope_test_error() {
    printf '%s: %s\n' "${hope}" "$*" >&2
    exit 1
}

hope_test_output() {
    case "${1}" in
        success)
            printf "${color_green}ok %s%s${color_reset}\n" "${test_num}" "${description:+ - $description}"
            ;;
        failed)
            printf "${color_red}not ok %s%s${color_reset}\n" "${test_num}" "${description:+ - $description}"
            ;;
        ''|*)
            hope_test_error "hope_test_error: usage: <success|failed>"
            ;;
    esac
    shift
}

new_set() {
    printf "${color_bold}# %s${color_reset}\n" "$@"
}

while [ $# -gt 0 ];do
    set=$(basename "${1}" .sh)
    new_set "${set}"
#    printf '1..%s\n' $(grep "${1}")
    . "${1}"
    shift
done

[ "${test_failed}" -eq 0 ] || exit 1
